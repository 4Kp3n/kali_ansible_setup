---

# Change directory ownerships
- name: Recursively change ownership of the ~/Repos directory
  ansible.builtin.file:
    path: /home/{{ user }}/Repos
    state: directory
    recurse: yes
    owner: "{{ user }}"
    group: "{{ user }}"

# Metasploit
- name: Enable Postgresql service
  ignore_errors: yes
  ansible.builtin.systemd:
    name: postgresql.service
    state: started
    enabled: true

- name: Check msfdb status
  ignore_errors: yes
  ansible.builtin.command: msfdb status
  register: msfdb_status
  changed_when: false

- name: Initialize msfdb
  ignore_errors: yes
  ansible.builtin.command: msfdb init
  when: "'No configuration file found' in msfdb_status.stdout"

# OpenSSL
- name: Configure OpenSSL
  ansible.builtin.lineinfile:
    path: /etc/ssl/openssl.cnf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - regexp: "^MinProtocol ="
      line: "MinProtocol = None"
    - regexp: "^CipherStrings ="
      line: "CipherStrings = DEFAULT"

- name: Install Oh My Zsh
  ansible.builtin.shell: sh -c "$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
  become: true
  become_user: "{{ user }}"
    
# Need to clone seperately because Oh My Zsh needs to be already installed otherwise .oh-my-zsh 
# directory will be created and installation fails
- name: Clone powerlevel10k
  become: true
  become_user: "{{ user }}"
  ansible.builtin.git:
    repo: https://github.com/romkatv/powerlevel10k.git
    dest: "/home/{{ user }}/.oh-my-zsh/custom/themes/powerlevel10k"
    version: master

# ZSH Theme
# Install Icons
- name: Ensure fonts directory exists
  file:
    path: "/home/{{ user }}/.fonts"
    owner: "{{ user }}"
    group: "{{ user }}"
    state: directory

- name: Install MesloLGS NF fonts
  ansible.builtin.get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dest }}"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: 0644
  loop: "{{ fonts }}"

- name: rebuild system font cache
  ansible.builtin.shell: fc-cache -f -v

- name: Touch zshhistory
  ansible.builtin.file:
    state: touch
    owner: "{{ user }}"
    group: "{{ user }}"
    path: /home/{{user}}/.cache/zshhistory

# Tmux
- name: Ensure .tmux directory exists
  file:
    path: "/home/{{ user }}/.tmux/"
    owner: "{{ user }}"
    group: "{{ user }}"
    state: directory

- name: Ensure tmux plugins directory exists
  file:
    path: "/home/{{ user }}/.tmux/plugins/"
    owner: "{{ user }}"
    group: "{{ user }}"
    state: directory

#- name: Install TPM to handle tmux tmux-plugins
#  ansible.builtin.shell: git clone https://github.com/tmux-plugins/tpm /home/{{ user }}/.tmux/plugins/tpm
#  become: true
#  become_user: "{{ user }}"
    
      
## Commented out for now because .config/bloodhound only gets populated after running it once
#- name: Copy custom queries into bloodhound config
#  ansible.builtin.copy:
#    src: /home/{{user}}/Repos/BloodHoundQueries/BloodHound_Custom_Queries/customqueries.json
#    dest: /home/{{user}}/.config/bloodhound/customqueries.json
#    owner: "{{ user }}"
#    group: "{{ user }}"
#
- name: Copy vim config for kali
  ansible.builtin.copy:
    src: /home/{{user}}/Repos/configs/init.vim
    dest: /home/{{user}}/.config/nvim/init.vim
    owner: "{{ user }}"
    group: "{{ user }}"

- name: Install vim plugins 
  ansible.builtin.shell: nvim +PluginInstall +qall
  become: true
  become_user: "{{ user }}"

# Copy zshrc files
- name: Copy zshrc for kali
  ansible.builtin.copy:
    src: /home/{{user}}/Repos/configs/zshrc
    dest: /home/{{user}}/.zshrc
    owner: "{{ user }}"
    group: "{{ user }}"
- name: Copy p10k.zshrc for kali
  ansible.builtin.copy:
    src: /home/{{user}}/Repos/configs/p10k.zsh
    dest: /home/{{user}}/.p10k.zsh
    owner: "{{ user }}"
    group: "{{ user }}"

# Copy aliase
- name: Copy user aliase
  ansible.builtin.copy:
    src: /home/{{user}}/Repos/configs/kali-aliase
    dest: /home/{{user}}/.aliase
    owner: "{{ user }}"
    group: "{{ user }}"

# Copy tmux config
- name: Change tmux config
  ansible.builtin.copy:
    src: /home/{{user}}/Repos/configs/tmux.conf
    dest: /home/{{user}}/.tmux.conf
    owner: "{{ user }}"
    group: "{{ user }}"

# Copy xfce4-power-manager.xml to disable screen lock
- name: Copy xfce4-power-manager.xml
  ansible.builtin.copy:
    src: /home/{{user}}/Repos/configs/xfce4-power-manager.xml
    dest: /home/{{user}}/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-power-manager.xml
    owner: "{{ user }}"
    group: "{{ user }}"